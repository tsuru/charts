# Default values for tsuru-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: tsuru/api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

strategy:
  rollingUpdate:
    maxSurge: 50%
    maxUnavailable: 1
  type: RollingUpdate

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  httpsOnly: true
  httpPort: 80
  targetHTTPPort: 8080
  httpsPort: 443
  targetHTTPSPort: 8443

secretKeys: []
secretName: ""
tlsSecretName: ""
hostCertBundleFile: ""

tracing:
  enabled: false
  agentHost: jaeger-agent.observability.svc.cluster.local
  sampler:
    type: const
    param: 0

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

indexPageTemplate: ""

tsuruConfig:
  # - HTTP Server
  # http://docs.tsuru.io/en/stable/reference/config.html#tsuru-configuration
  server: "0.0.0.0:8080"
  host: ""
  useTLS: true
  TLS:
    certFilename: ""
    certKeyFile: ""
    listen: 8443
    autoreloadInterval: 30s
    validateCertificate: true

  # Disable index page
  # http://docs.tsuru.io/en/stable/reference/config.html#index-page-template
  disableIndexPage: false

  # Default admin team
  # http://docs.tsuru.io/en/stable/reference/config.html#admin-users
  adminTeam: admin

  # - Quota management
  # http://docs.tsuru.io/en/stable/reference/config.html#quota-management
  quota:
    appsPerUser: 10
    unitsPerApp: 10

  # Tsuru API database
  # http://docs.tsuru.io/en/stable/reference/config.html#database-access
  database:
    mongodbURL: "localhost:27017"
    databaseName: "tsuru"

  # - Email configuration
  # http://docs.tsuru.io/en/stable/reference/config.html#email-configuration
  SMTP:
    server: ""
    username: ""
    password: ""

  # http://docs.tsuru.io/en/stable/reference/config.html#authentication-configuration
  auth:
    scheme: "oauth"
    userRegistration: true
    maxSimultaneousSessions:
    native:
      tokenExpire:
      hashCost:
    oauth:
      clientID:
      clientSecret:
      scope:
      authURL:
      tokenURL:
      infoURL:
      collection:
      callbackPort:

  # http://docs.tsuru.io/en/stable/reference/config.html#config-queue
  queue:
    mongodbURL: "localhost:27017"
    databaseName: "tsuru"

  # http://docs.tsuru.io/en/stable/reference/config.html#config-routers
  routers: {}

  # https://docs.tsuru.io/stable/managing/volumes.html#volume-plans
  volumePlans: {}

  # http://docs.tsuru.io/en/stable/reference/config.html#provisioner
  provisioner: ""
  docker: {}
  kubernetes:
    deploySidecarImage:
    deployInspectImage:
    poolNamespaces:
    progressTimeout:

  # http://docs.tsuru.io/en/stable/reference/config.html#iaas-configuration
  iaas:
    nodeProtocol: "http"
    nodePort: "2375"
    default: "ec2"
    ec2: {}
    cloudstack: {}
    customIaaS: {}

  events:
    suppressSensitiveEnvs: true

  # https://docs.tsuru.io/master/reference/config.html#event-throttling-configuration
  eventThrottling: {}

  debug: false
  log:
    file: ""
    disableSyslog: true
    syslogTag: ""
    useStdErr: true
    appLogBufferBytes: "1048576"